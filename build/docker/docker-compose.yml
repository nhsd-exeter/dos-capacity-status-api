version: "3.7"

services:
  api:
    depends_on:
      - db-dos
    image: $DOCKER_REGISTRY/api:latest
    container_name: api
    hostname: api
    environment:
      PROFILE: $PROFILE
      PIP_TARGET: /tmp/.packages
      PYTHONPATH: /tmp/.packages
      XDG_CACHE_HOME: /tmp/.cache
      DB_HOST: db-dos
      DB_PORT: 5432
      DB_NAME: $DB_DOS_NAME
      DB_DOS_USERNAME: $DB_DOS_USERNAME
      DB_DOS_PASSWORD: $DB_DOS_PASSWORD
      API_ADMIN_PASSWORD: $API_ADMIN_PASSWORD
      DJANGO_DEBUG: "True"
      HTTP_PROTOCOL: https
      REQUEST_ID_HEADER: HTTP_X_REQUEST_ID
      RESET_STATUS_IN_DEFAULT_MINS: $SERVICE_RESET_STATUS_IN_DEFAULT_MINS
      RESET_STATUS_IN_MINIMUM_MINS: $SERVICE_RESET_STATUS_IN_MINIMUM_MINS
      RESET_STATUS_IN_MAX_MINS: $SERVICE_RESET_STATUS_IN_MAX_MINS
    volumes:
      - $HOME/.python/pip/cache:/tmp/.cache/pip
      - $HOME/.python/pip/packages:/tmp/.packages
    ports:
      - "8443:8443"

  db-dos:
    image: $DOCKER_LIBRARY_REGISTRY/postgres:latest
    container_name: db-dos
    hostname: db-dos
    environment:
      PROFILE: $PROFILE
      POSTGRES_DB: $DB_DOS_NAME
      POSTGRES_USER: $DB_DOS_USERNAME
      POSTGRES_PASSWORD: $DB_DOS_PASSWORD
    volumes:
      - $DATA_DIR/sql:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    networks:
      default:
        aliases:
          - db.$PROJECT_NAME_SHORT.local

  proxy:
    depends_on:
      - api
    image: $DOCKER_REGISTRY/proxy:latest
    container_name: proxy
    hostname: proxy
    environment:
      PROFILE: $PROFILE
      API_HOST: $API_HOST
      API_ADMIN_ALLOWED_HOSTS: $API_ADMIN_ALLOWED_HOSTS
    ports:
      - "443:443"

networks:
  default:
    external:
      name: $DOCKER_NETWORK
