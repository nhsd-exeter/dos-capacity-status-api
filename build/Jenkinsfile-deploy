#!/usr/bin/env groovy

pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    stages {
        stage("Set up Variables") {
            steps {
                script {
                    sh 'make variables'
                }
            }
        }
        stage("Pull Images") {
            steps {
                script {
                    sh 'make docker-pull NAME=proxy TAG='
                    sh 'make docker-pull NAME=api TAG='
                }
            }
        }
        stage("Provision Infrastructure") {
            steps {
                script {
                    if env.PROFILE != 'dev':
                      sh 'make backup-data'
                    sh 'make terraform-apply-auto-approve STACKS=infrastructure/stacks PROFILE=env.PROFILE'
                }
            }
        }
        stage("Deploy Application") {
            steps {
                script {
                    sh 'make deploy PROFILE=env.PROFILE'
                }
            }
        }
        stage("Prepare Data") {
            steps {
                script {
                    sh 'make prepare-data'
                }
            }
        }
        stage("Run Tests") {
            steps {
                script {
                    sh 'make test'
                }
            }
        }
    }
    post {
        always {
            sh 'make pipeline-test-cleanup'
        }
    }
}
