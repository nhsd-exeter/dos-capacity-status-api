#!/usr/bin/env groovy

pipeline {
  agent {
    label 'jenkins-slave'
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }

  environment {
    BRANCH_NAME = "${GIT_BRANCH}"
    GIT_COMMIT = sh(returnStdout: true, script: 'make git-commit-get-hash').trim()
    GIT_TAG = "${GIT_BRANCH}"
    PROFILE = sh(returnStdout: true, script: "make set-profile-for-deployment TAG=${GIT_TAG}").trim()
    IS_RC = sh(returnStdout: true, script: "make git-tag-is-release-candidate COMMIT=${GIT_COMMIT}").trim()
    IS_MASTER_BRANCH = sh(returnStdout: true, script: "make git-tag-is-present-on-branch TAG=${GIT_TAG} BRANCH=master").trim()
  }

  stages {
    stage('Setup Variables') {
      steps {
        script {
          sh 'make devops-print-variables'
          sh "echo BRANCH_NAME=${BRANCH_NAME}"
          sh "echo GIT_COMMIT=${GIT_COMMIT}"
          sh "echo GIT_TAG=${GIT_TAG}"
          sh "echo PROFILE=${PROFILE}"
          sh "echo IS_MASTER_BRANCH=${IS_MASTER_BRANCH}"
          sh "echo IS_RC=${IS_RC}"
        }
      }
    }
    stage('Check if OK to Deploy') {
      steps {
        script {
          if (IS_MASTER_BRANCH == 'false') {
            sh "echo Git Tag is not present on specified branch"
            error('Failing build because tag is not on the correct branch...')
          }
          if ((PROFILE == 'prod' || PROFILE == 'demo') && IS_RC == 'false') {
            sh "echo Not a release candidate"
            error('Failing build because commit is not marked as a release candidate...')
          }
        }
      }
    }
    stage('Backup Data') {
      when { expression { this.PROFILE != 'dev' } }
      steps {
        script {
          sh "echo Creating RDS Snapshot"
          sh "make backup-data"
        }
      }
    }
    stage('Provision Infrastructure') {
      steps {
        script {
          sh "echo Provisioning infrastructure for ${PROFILE} environment"
          sh "make terraform-apply-auto-approve STACKS=service PROFILE=${PROFILE} OPTS='--var-file=../tfvars/${PROFILE}.tfvars' | tee /tmp/terraform_changes.txt"
          sh "make secret-update-db-password"
        }
      }
    }
    stage('Deploy Application') {
      steps {
        script {
          sh "make deploy PROFILE=${PROFILE} API_IMAGE_TAG=${GIT_TAG} PROXY_IMAGE_TAG=${GIT_TAG} | tee /tmp/deployment_stats.txt"
        }
      }
    }
    stage('Load Test Data') {
      when { expression { this.PROFILE == 'dev' } }
      steps {
        script {
          sh "make deploy-job PROFILE=${PROFILE} STACK=data || :"
        }
      }
    }
    // stage("Run Tests") {
    //     steps {
    //         script {
    //             sh 'make test'
    //         }
    //     }
    // }
    stage('Deployment Summary') {
      steps {
        script {
          sh "make deployment-summary"
        }
      }
    }
  }
  post {
    success {
      script {
        if (this.PROFILE != 'dev') {
          sh """
            export BUILD_STATUS=${currentBuild.currentResult}
            export PIPELINE_NAME='Deploy Pipeline'
            make slack-it
          """
        }
      }
    }
    failure {
      script {
        sh """
          export BUILD_STATUS=${currentBuild.currentResult}
          export PIPELINE_NAME='Deploy Pipeline'
          make slack-it
        """
        sh 'make jenkins-upload-workspace'
      }
    }
    cleanup {
      script {
        script {
          sh 'make clean'
        }
      }
    }
  }
}
